const l=JSON.parse('{"key":"v-72a4b663","path":"/posts/notes/co_notes/review.html","title":"计算机组织与结构 期末复习","lang":"zh-CN","frontmatter":{"article":true,"author":"Neonscape","date":"2023-12-29T00:00:00.000Z","image":"/assets/imgs/bgs/20230912(33).png","cover":"/assets/imgs/bgs/20230912(34).png","category":["notes"],"tag":["computer organization"]},"headers":[{"level":2,"title":"计算机系统概述","slug":"计算机系统概述","link":"#计算机系统概述","children":[{"level":3,"title":"计算机硬件的基本组成","slug":"计算机硬件的基本组成","link":"#计算机硬件的基本组成","children":[]},{"level":3,"title":"计算机软件的分类","slug":"计算机软件的分类","link":"#计算机软件的分类","children":[]},{"level":3,"title":"计算机系统的抽象层及其转换","slug":"计算机系统的抽象层及其转换","link":"#计算机系统的抽象层及其转换","children":[]},{"level":3,"title":"用户CPU时间计算","slug":"用户cpu时间计算","link":"#用户cpu时间计算","children":[]},{"level":3,"title":"Amdahl定律","slug":"amdahl定律","link":"#amdahl定律","children":[]}]},{"level":2,"title":"数据的机器级表示","slug":"数据的机器级表示","link":"#数据的机器级表示","children":[{"level":3,"title":"进制数之间的转换","slug":"进制数之间的转换","link":"#进制数之间的转换","children":[]},{"level":3,"title":"原码、补码、移码表示法","slug":"原码、补码、移码表示法","link":"#原码、补码、移码表示法","children":[]},{"level":3,"title":"无符号整数和带符号整数的表示","slug":"无符号整数和带符号整数的表示","link":"#无符号整数和带符号整数的表示","children":[]},{"level":3,"title":"浮点数的表示与IEEE 754标准","slug":"浮点数的表示与ieee-754标准","link":"#浮点数的表示与ieee-754标准","children":[]},{"level":3,"title":"C语言中的整数和浮点数","slug":"c语言中的整数和浮点数","link":"#c语言中的整数和浮点数","children":[]},{"level":3,"title":"数据的存储和排列顺序","slug":"数据的存储和排列顺序","link":"#数据的存储和排列顺序","children":[]}]},{"level":2,"title":"运算方法和运算部件","slug":"运算方法和运算部件","link":"#运算方法和运算部件","children":[{"level":3,"title":"常见的汇编指令（MIPS）","slug":"常见的汇编指令-mips","link":"#常见的汇编指令-mips","children":[]},{"level":3,"title":"串行、并行、带标志的加法器原理","slug":"串行、并行、带标志的加法器原理","link":"#串行、并行、带标志的加法器原理","children":[]},{"level":3,"title":"补码的加减运算","slug":"补码的加减运算","link":"#补码的加减运算","children":[]},{"level":3,"title":"原码、补码的乘除","slug":"原码、补码的乘除","link":"#原码、补码的乘除","children":[]},{"level":3,"title":"乘除运算溢出的判断、常量的乘除运算","slug":"乘除运算溢出的判断、常量的乘除运算","link":"#乘除运算溢出的判断、常量的乘除运算","children":[]},{"level":3,"title":"浮点数的加减运算与舍入方式","slug":"浮点数的加减运算与舍入方式","link":"#浮点数的加减运算与舍入方式","children":[]}]},{"level":2,"title":"指令系统","slug":"指令系统","link":"#指令系统","children":[{"level":3,"title":"指令格式设计","slug":"指令格式设计","link":"#指令格式设计","children":[]},{"level":3,"title":"操作数类型、寻址方式、操作类型、操作码编码","slug":"操作数类型、寻址方式、操作类型、操作码编码","link":"#操作数类型、寻址方式、操作类型、操作码编码","children":[]},{"level":3,"title":"异常和中断的区别","slug":"异常和中断的区别","link":"#异常和中断的区别","children":[]},{"level":3,"title":"MIPS指令的格式和寻址方式","slug":"mips指令的格式和寻址方式","link":"#mips指令的格式和寻址方式","children":[]},{"level":3,"title":"选择结构、循环结构的汇编表示","slug":"选择结构、循环结构的汇编表示","link":"#选择结构、循环结构的汇编表示","children":[]},{"level":3,"title":"过程调用指令、执行步骤、栈和栈帧的变化","slug":"过程调用指令、执行步骤、栈和栈帧的变化","link":"#过程调用指令、执行步骤、栈和栈帧的变化","children":[]}]},{"level":2,"title":"中央处理器","slug":"中央处理器","link":"#中央处理器","children":[{"level":3,"title":"CPU执行指令的过程","slug":"cpu执行指令的过程","link":"#cpu执行指令的过程","children":[]},{"level":3,"title":"CPU的基本组成、操作元件和状态元件","slug":"cpu的基本组成、操作元件和状态元件","link":"#cpu的基本组成、操作元件和状态元件","children":[]},{"level":3,"title":"指令周期和时钟周期","slug":"指令周期和时钟周期","link":"#指令周期和时钟周期","children":[]},{"level":3,"title":"MIPS的指令格式、典型的MIPS指令","slug":"mips的指令格式、典型的mips指令","link":"#mips的指令格式、典型的mips指令","children":[]},{"level":3,"title":"典型的MIPS指令数据通路、单周期数据通路设计、局部数据通路、控制信号的取值","slug":"典型的mips指令数据通路、单周期数据通路设计、局部数据通路、控制信号的取值","link":"#典型的mips指令数据通路、单周期数据通路设计、局部数据通路、控制信号的取值","children":[]},{"level":3,"title":"多周期数据通路的设计、控制信号的取值","slug":"多周期数据通路的设计、控制信号的取值","link":"#多周期数据通路的设计、控制信号的取值","children":[]},{"level":3,"title":"微程序控制处理器","slug":"微程序控制处理器","link":"#微程序控制处理器","children":[]},{"level":3,"title":"带异常处理的数据通路、有限状态机","slug":"带异常处理的数据通路、有限状态机","link":"#带异常处理的数据通路、有限状态机","children":[]}]},{"level":2,"title":"指令流水线","slug":"指令流水线","link":"#指令流水线","children":[{"level":3,"title":"指令流水线的组成流水段","slug":"指令流水线的组成流水段","link":"#指令流水线的组成流水段","children":[]},{"level":3,"title":"MIPS指令的功能段划分、流水线数据通路的设计、控制信号的取值","slug":"mips指令的功能段划分、流水线数据通路的设计、控制信号的取值","link":"#mips指令的功能段划分、流水线数据通路的设计、控制信号的取值","children":[]},{"level":3,"title":"结构冒险","slug":"结构冒险","link":"#结构冒险","children":[]},{"level":3,"title":"数据冒险、转发技术、load-use的检测和处理","slug":"数据冒险、转发技术、load-use的检测和处理","link":"#数据冒险、转发技术、load-use的检测和处理","children":[]},{"level":3,"title":"控制冒险、静态预测、动态预测、延迟分支","slug":"控制冒险、静态预测、动态预测、延迟分支","link":"#控制冒险、静态预测、动态预测、延迟分支","children":[]},{"level":3,"title":"异常和中断引起的控制冒险","slug":"异常和中断引起的控制冒险","link":"#异常和中断引起的控制冒险","children":[]}]},{"level":2,"title":"存储器层次结构","slug":"存储器层次结构","link":"#存储器层次结构","children":[{"level":3,"title":"存储器的分类、主存储器的组成和基本操作、存储器的层次化结构","slug":"存储器的分类、主存储器的组成和基本操作、存储器的层次化结构","link":"#存储器的分类、主存储器的组成和基本操作、存储器的层次化结构","children":[]},{"level":3,"title":"SRAM和DRAM的区别","slug":"sram和dram的区别","link":"#sram和dram的区别","children":[]},{"level":3,"title":"存储器芯片的扩展","slug":"存储器芯片的扩展","link":"#存储器芯片的扩展","children":[]},{"level":3,"title":"连续编址方式、交叉编址方式","slug":"连续编址方式、交叉编址方式","link":"#连续编址方式、交叉编址方式","children":[]},{"level":3,"title":"磁盘读写的三个步骤","slug":"磁盘读写的三个步骤","link":"#磁盘读写的三个步骤","children":[]},{"level":3,"title":"磁盘存储器的性能指标","slug":"磁盘存储器的性能指标","link":"#磁盘存储器的性能指标","children":[]},{"level":3,"title":"数据校验的基本原理、奇偶校验码、循环冗余校验码","slug":"数据校验的基本原理、奇偶校验码、循环冗余校验码","link":"#数据校验的基本原理、奇偶校验码、循环冗余校验码","children":[]},{"level":3,"title":"程序访问的局部性","slug":"程序访问的局部性","link":"#程序访问的局部性","children":[]},{"level":3,"title":"Cache的基本工作原理","slug":"cache的基本工作原理","link":"#cache的基本工作原理","children":[]},{"level":3,"title":"直接映射、全相连映射、组相连映射（命中率、命中时间、缺失损失、平均访问时间）","slug":"直接映射、全相连映射、组相连映射-命中率、命中时间、缺失损失、平均访问时间","link":"#直接映射、全相连映射、组相连映射-命中率、命中时间、缺失损失、平均访问时间","children":[]},{"level":3,"title":"先进先出算法、最近最少用算法","slug":"先进先出算法、最近最少用算法","link":"#先进先出算法、最近最少用算法","children":[]},{"level":3,"title":"全写法、回写法的区别","slug":"全写法、回写法的区别","link":"#全写法、回写法的区别","children":[]},{"level":3,"title":"虚拟存储器的基本概念","slug":"虚拟存储器的基本概念","link":"#虚拟存储器的基本概念","children":[]},{"level":3,"title":"进程的虚拟地址空间划分","slug":"进程的虚拟地址空间划分","link":"#进程的虚拟地址空间划分","children":[]},{"level":3,"title":"分页式虚拟存储器的工作原理（页表、地址转换、快表、CPU访存过程）","slug":"分页式虚拟存储器的工作原理-页表、地址转换、快表、cpu访存过程","link":"#分页式虚拟存储器的工作原理-页表、地址转换、快表、cpu访存过程","children":[]}]},{"level":2,"title":"系统互连、输入输出组织","slug":"系统互连、输入输出组织","link":"#系统互连、输入输出组织","children":[{"level":3,"title":"外设的分类","slug":"外设的分类","link":"#外设的分类","children":[]},{"level":3,"title":"总线、系统总线、数据线、地址线、控制线","slug":"总线、系统总线、数据线、地址线、控制线","link":"#总线、系统总线、数据线、地址线、控制线","children":[]},{"level":3,"title":"基于总线的互连结构 （主要模块以及连接的总线）","slug":"基于总线的互连结构-主要模块以及连接的总线","link":"#基于总线的互连结构-主要模块以及连接的总线","children":[]},{"level":3,"title":"I/O接口的职能、I/O接口的通用结构","slug":"i-o接口的职能、i-o接口的通用结构","link":"#i-o接口的职能、i-o接口的通用结构","children":[]},{"level":3,"title":"I/O端口的独立编址方式、统一编址方式","slug":"i-o端口的独立编址方式、统一编址方式","link":"#i-o端口的独立编址方式、统一编址方式","children":[]},{"level":3,"title":"程序直接控制I/O方式、中断控制I/O方式、DMA方式的工作原理、区别","slug":"程序直接控制i-o方式、中断控制i-o方式、dma方式的工作原理、区别","link":"#程序直接控制i-o方式、中断控制i-o方式、dma方式的工作原理、区别","children":[]},{"level":3,"title":"中断响应、中断处理中断优先权的动态分配","slug":"中断响应、中断处理中断优先权的动态分配","link":"#中断响应、中断处理中断优先权的动态分配","children":[]},{"level":3,"title":"3种DMA方式：CPU停止法、周期挪用法、交替分时访问法","slug":"_3种dma方式-cpu停止法、周期挪用法、交替分时访问法","link":"#_3种dma方式-cpu停止法、周期挪用法、交替分时访问法","children":[]},{"level":3,"title":"I/O子系统层次结构每层的基本功能","slug":"i-o子系统层次结构每层的基本功能","link":"#i-o子系统层次结构每层的基本功能","children":[]},{"level":3,"title":"用户程序、C语言库、内核之间的关系","slug":"用户程序、c语言库、内核之间的关系","link":"#用户程序、c语言库、内核之间的关系","children":[]}]}],"git":{"createdTime":1703838742000,"updatedTime":1704015597000,"contributors":[{"name":"Neonscape","email":"neonscapemail@gmail.com","commits":5}]},"readingTime":{"minutes":21.82,"words":6546},"filePathRelative":"posts/notes/co_notes/review.md","localizedDate":"2023年12月29日","excerpt":"<h1> 计算机组织与结构 期末复习</h1>\\n<h2> 计算机系统概述</h2>\\n<h3> 计算机硬件的基本组成</h3>\\n<h4> 冯·诺依曼结构</h4>\\n<p>计算机由如下结构组成：</p>\\n<ul>\\n<li>运算器（执行算术和逻辑运算）</li>\\n<li>控制器（控制指令的执行）</li>\\n<li>存储器（存储数据和指令）</li>\\n<li>输入设备</li>\\n<li>输出设备</li>\\n</ul>\\n<h4> 现代计算机</h4>\\n<p>现代计算机一般有如下结构：</p>\\n<ul>\\n<li>中央处理器\\n<ul>\\n<li>运算器</li>\\n<li>控制器</li>\\n<li>寄存器</li>\\n</ul>\\n</li>\\n<li>存储器\\n<ul>\\n<li>内存</li>\\n<li>外存</li>\\n</ul>\\n</li>\\n<li>外部设备、设备控制器</li>\\n<li>总线</li>\\n</ul>"}');export{l as data};
