import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as e,d as m,e as l,a as s,b as a}from"./app-8abb4120.js";const i={},c=l('<h2 id="搜索策略" tabindex="-1"><a class="header-anchor" href="#搜索策略" aria-hidden="true">#</a> 搜索策略</h2><p>搜索策略可以大致分为两种：有信息搜索（启发式搜索）和无信息搜索。</p><p>常用的搜索方式如下：</p><ul><li>最佳优先搜索（BeFS）</li><li>广度优先搜索（BFS）</li><li>深度优先搜索（DFS）</li><li>一致代价搜索（UCS）</li><li>深度受限搜索（DLS）</li><li>迭代加深搜索（IDS / IDDFS）</li><li>A*搜索</li></ul><p>常用于评估搜索算法的几个指标如下：</p><ul><li>搜索树的最大分支因子<code>b</code> - 每个节点最大有几个分支</li><li>最小代价解的深度<code>d</code></li><li>状态空间的最大深度<code>m</code></li></ul><h3 id="_1-最佳优先搜索" tabindex="-1"><a class="header-anchor" href="#_1-最佳优先搜索" aria-hidden="true">#</a> 1. 最佳优先搜索</h3><p>最佳优先搜索本质上是一种启发式搜索。它将待搜索节点队列以启发函数<code>f(node)</code>排序，以找到离目标代价最小的路径。</p><h3 id="_2-广度优先搜索" tabindex="-1"><a class="header-anchor" href="#_2-广度优先搜索" aria-hidden="true">#</a> 2. 广度优先搜索</h3>',9),p=s("ul",null,[s("li",null,"完备性: 是 （若b有限）"),s("li",null,[a("时间："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msubsup",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mi",null,"d")]),s("msup",null,[s("mi",null,"b"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"\\sum_{i = 1}^{d} b^i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2887em","vertical-align":"-0.2997em"}}),s("span",{class:"mop"},[s("span",{class:"mop op-symbol small-op",style:{position:"relative",top:"0em"}},"∑"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.989em"}},[s("span",{style:{top:"-2.4003em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"1")])])]),s("span",{style:{top:"-3.2029em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"d")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2997em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8247em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])])])])])])])])])]),s("li",null,[a("空间："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"b"),s("mi",null,"d")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\Omicron(b^d)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0991em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathrm"},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8491em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"d")])])])])])])]),s("span",{class:"mclose"},")")])])]),a("（所有节点均存在内存中）")]),s("li",null,"代价最优（仅当所有动作具有相同代价）")],-1),r=s("h3",{id:"_3-深度优先搜索",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_3-深度优先搜索","aria-hidden":"true"},"#"),a(" 3. 深度优先搜索")],-1),h=s("ul",null,[s("li",null,"完备性：否（无限 / 有环状态空间）"),s("li",null,[a("时间："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"b"),s("mi",null,"m")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\Omicron(b^m)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathrm"},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])])])])])]),s("span",{class:"mclose"},")")])])]),a(" - 如果解密集，可能快于BFS")]),s("li",null,[a("空间："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"b"),s("mi",null,"m"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\Omicron(bm)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathrm"},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"bm"),s("span",{class:"mclose"},")")])])]),a(" - 线性空间")]),s("li",null,"代价最优：否（会先返回左边的解）")],-1),o=s("h3",{id:"_4-一致代价搜索",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-一致代价搜索","aria-hidden":"true"},"#"),a(" 4. 一致代价搜索")],-1),g=s("ul",null,[s("li",null,"完备性：是（假设没有负权边）"),s("li",null,[a("时间：最坏"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"b"),s("mfrac",null,[s("msup",null,[s("mi",null,"C"),s("mo",null,"∗")]),s("mi",null,"ϵ")])]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\Omicron(b^{\\frac{C^*}{\\epsilon}})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.3164em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathrm"},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0664em"}},[s("span",{style:{top:"-3.363em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen nulldelimiter sizing reset-size3 size6"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0049em"}},[s("span",{style:{top:"-2.656em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"ϵ")])])]),s("span",{style:{top:"-3.2255em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line mtight",style:{"border-bottom-width":"0.049em"}})]),s("span",{style:{top:"-3.384em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8693em"}},[s("span",{style:{top:"-2.904em","margin-right":"0.1em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"mbin mtight"},"∗")])])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.344em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter sizing reset-size3 size6"})])])])])])])])])]),s("span",{class:"mclose"},")")])])]),a(", C*为最优解的代价")]),s("li",null,[a("空间：最坏"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"b"),s("mfrac",null,[s("msup",null,[s("mi",null,"C"),s("mo",null,"∗")]),s("mi",null,"ϵ")])]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"\\Omicron(b^{\\frac{C^*}{\\epsilon}})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.3164em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathrm"},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0664em"}},[s("span",{style:{top:"-3.363em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen nulldelimiter sizing reset-size3 size6"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0049em"}},[s("span",{style:{top:"-2.656em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"ϵ")])])]),s("span",{style:{top:"-3.2255em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line mtight",style:{"border-bottom-width":"0.049em"}})]),s("span",{style:{top:"-3.384em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8693em"}},[s("span",{style:{top:"-2.904em","margin-right":"0.1em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"mbin mtight"},"∗")])])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.344em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter sizing reset-size3 size6"})])])])])])])])])]),s("span",{class:"mclose"},")")])])])]),s("li",null,"代价最优：是")],-1),u=l('<h3 id="_5-深度受限搜索" tabindex="-1"><a class="header-anchor" href="#_5-深度受限搜索" aria-hidden="true">#</a> 5. 深度受限搜索</h3><p>在DFS的基础上限制搜索深度只能为<code>l</code>。</p><p>适用于最大深度较大的状态空间中的搜索。</p><h3 id="_6-迭代加深搜索" tabindex="-1"><a class="header-anchor" href="#_6-迭代加深搜索" aria-hidden="true">#</a> 6. 迭代加深搜索</h3><p>运用多次<strong>深度限制不断增大</strong>的DLS进行图的搜索。</p><h3 id="_7-a-搜索" tabindex="-1"><a class="header-anchor" href="#_7-a-搜索" aria-hidden="true">#</a> 7. A*搜索</h3><p>主要思想：避免扩展代价已经很高的路径。</p><p>A*搜索在BFS的基础上将待搜索队列用<code>f(n) = g(n) + h(n)</code>排列； 其中<code>g(n)</code>是从起点到当前节点的已知代价，<code>h(n)</code>是当前搜索使用的启发函数。</p><p>对于 <strong>可容许的启发函数</strong>，A*搜索是代价最优（能够找到代价最小的解节点）的：</p>',9),d=s("p",null,[a("一个启发函数是可容许的，当且仅当"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"h"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")"),s("mo",null,"≤"),s("msup",null,[s("mi",null,"h"),s("mo",null,"∗")]),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"h(n) \\le h^*(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"≤"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"h"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6887em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mbin mtight"},"∗")])])])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a("。其中"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"h"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"h(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a("是当前讨论的启发函数，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"h"),s("mo",null,"∗")]),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"h^*(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"h"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6887em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mbin mtight"},"∗")])])])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a("是经过节点"),s("code",null,"n"),a("到目标状态的真实代价。")],-1),y=s("blockquote",null,[s("h3",{id:"加权a-搜索",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#加权a-搜索","aria-hidden":"true"},"#"),a(),s("em",null,"加权A*搜索")]),s("p",null,[a("加权A*搜索使用的排序公式如下： "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",null,"g"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")"),s("mo",null,"+"),s("mi",null,"W"),s("mo",null,"⋅"),s("mi",null,"h"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")"),s("mo",{separator:"true"},","),s("mi",null,"W"),s("mo",null,">"),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"f(n) = g(n) + W \\cdot h(n), W > 1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"h"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},">"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])])]),s("p",null,"加权A*搜索并不一定能找到最优解，但可能会以更小的时间找到一个次优解。")],-1),x=l('<h2 id="局部搜索、最优化" tabindex="-1"><a class="header-anchor" href="#局部搜索、最优化" aria-hidden="true">#</a> 局部搜索、最优化</h2><p>如果状态空间非常大，甚至是无穷大，我们可以采用局部搜索算法进行问题的求解。 注意：局部搜索算法并不是系统性的——它们可能永远不会搜索解所在的那部分状态空间。</p><h3 id="_1-爬山算法" tabindex="-1"><a class="header-anchor" href="#_1-爬山算法" aria-hidden="true">#</a> 1. 爬山算法</h3><p>爬山算法每次用当前状态周围某个更优的状态替换当前状态，但它无法解决局部极大值及平坦区域的问题。</p><h3 id="_2-模拟退火" tabindex="-1"><a class="header-anchor" href="#_2-模拟退火" aria-hidden="true">#</a> 2. 模拟退火</h3><p>模拟退火算法在爬山算法的基础上做出了改进，允许“下坡”的情况出现。</p>',6);function b(v,f){return n(),e("div",null,[m(" more "),c,p,r,h,o,g,u,d,y,x])}const _=t(i,[["render",b],["__file","searching.html.vue"]]);export{_ as default};
