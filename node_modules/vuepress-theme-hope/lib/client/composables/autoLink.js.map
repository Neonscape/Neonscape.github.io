{"version":3,"file":"autoLink.js","sourceRoot":"","sources":["../../../src/client/composables/autoLink.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,YAAY,CAAC;AACvC,OAAO,EAAE,wBAAwB,EAAE,MAAM,wBAAwB,CAAC;AAIlE;;;;;;GAMG;AACH,MAAM,CAAC,MAAM,WAAW,GAAG,CACzB,IAAY,EACZ,UAAU,GAAG,KAAK,EACD,EAAE;IACnB,2CAA2C;IAC3C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;IACvD,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAAE,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;IAC7D,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QAAE,IAAI,GAAG,GAAG,IAAI,OAAO,CAAC;IAElD,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;IAC3B,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,wBAAwB,CACvD,MAAM,EACN,SAAS,CAAC,IAAI,CAAC,CAChB,CAAC;IAEF,OAAO;QACL,IAAI,EACF,CAAC,UAAU,IAAI,IAAI,sCAA4B;YAC7C,CAAC,CAAC,IAAI,sCAA4B;YAClC,CAAC,CAAC,IAAI,iCAAuB,IAAI,IAAI;QACzC,IAAI,EAAE,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ;QACtC,GAAG,CAAC,IAAI,gCAAsB,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,gCAAsB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;KAC5E,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useRouter } from \"vue-router\";\nimport { resolveRouteWithRedirect } from \"vuepress-shared/client\";\n\nimport { ArticleInfoType, type AutoLinkOptions } from \"../../shared/index.js\";\n\n/**\n * Resolve AutoLink props from string\n *\n * @example\n * - Input: \"/README.md\"\n * - Output: { text: \"Home\", link: \"/\" }\n */\nexport const useAutoLink = (\n  item: string,\n  preferFull = false\n): AutoLinkOptions => {\n  // Performance: try to infer the final path\n  item = item.replace(/(^|\\/)(README|index).md$/i, \"$1\");\n  if (item.endsWith(\".md\")) item = `${item.slice(0, -3)}.html`;\n  if (item.match(/\\/[^/]+$/)) item = `${item}.html`;\n\n  const router = useRouter();\n  const { fullPath, meta, name } = resolveRouteWithRedirect(\n    router,\n    encodeURI(item)\n  );\n\n  return {\n    text:\n      !preferFull && meta[ArticleInfoType.shortTitle]\n        ? meta[ArticleInfoType.shortTitle]\n        : meta[ArticleInfoType.title] || item,\n    link: name === \"404\" ? item : fullPath,\n    ...(meta[ArticleInfoType.icon] ? { icon: meta[ArticleInfoType.icon] } : {}),\n  };\n};\n"]}